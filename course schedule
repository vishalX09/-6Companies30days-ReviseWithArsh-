class Solution {
    private:
    // cycle  detection technique in directed graph  
    //  so  if cycle found  we return false;
    
        bool dfscycle(int node, vector<int> &vis , vector<int> &pathvis , vector<int>adj[]){
           vis[node] =1;
            pathvis[node] =1;
            
            for(auto it: adj[node]){
                if(vis[it] == 0){     // no one  s go  through the  path  
                    if(dfscycle(it , vis , pathvis , adj) == true) return true;
                }
                else if(pathvis[it] == 1){  //  some  one is going through this path but this is the  same path ? 
                    return true;
                }
              }
            pathvis[node] = 0;
            return false;
            }
        
public:
    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
        vector<int> vis(numCourses,0) , pathvis(numCourses , 0);
        vector<int> adj[numCourses];
        for(auto it: prerequisites){
            adj[it[1]].push_back(it[0]);
        }
        for(int i =0;i<numCourses;i++){
            if(!vis[i]){
                if(dfscycle(i , vis,pathvis,adj)){
                    return false;
                    
                }
            }
        }
        return true;
    }
};
